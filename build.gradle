buildscript {
    ext {
        springBootVersion = '1.3.0.M4'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:0.10")
        classpath('com.moowork.gradle:gradle-gulp-plugin:0.10')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: "com.moowork.node"
apply plugin: 'com.moowork.gulp'

jar {
    baseName = 'spring-angular2-demo'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-cache")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-web")
    runtime("com.h2database:h2")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

node {
    version = '0.12.1'
    npmVersion = '2.5.1'
    distBaseUrl = 'http://nodejs.org/dist'
    download = true
    workDir = file("${project.buildDir}/nodejs")
    nodeModulesDir = file("${project.projectDir}")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

gulp_build.dependsOn(npm_install)
processResources.dependsOn gulp_build
